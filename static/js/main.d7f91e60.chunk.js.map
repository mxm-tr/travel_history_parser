{"version":3,"sources":["date_window.js","utils.js","result.js","timeline.js","icons.js","travel_checks.js","input_form_dialog.js","tooltips.js","index.js"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","DateWindow","state","tabValue","handleTabChange","bind","selectYear","event","newValue","this","setState","handleWindowStartChange","dateWindowStart","handleWindowStopChange","dateWindowStop","moment","_d","newDate","Date","getFullYear","classes","Grid","item","xs","utils","DateFnsUtils","AppBar","position","Toolbar","variant","className","title","aria-label","Tabs","onChange","Tab","label","Card","root","CardContent","DatePicker","format","newD","color","views","Button","onClick","fitDateWindow","size","React","Component","travelTypes","sortTravelChecks","travelChecks","newList","Array","from","sort","a","b","date","sumTravelDaysInside","travelsList","selectedTravels","filter","t","length","map","reduce","dateStringToDate","dateStr","undefined","dateToDateString","computeTravelDurationDays","dateStart","dateStop","dateStartD","dateStopD","dateWindowStartD","dateWindowStopD","Math","abs","diff","min","max","useStyles","makeStyles","chip","margin","errorMessage","fontSize","renderTravelCheck","tc","Chip","icon","type","location","renderParsingErrors","errors","List","m","i","e","separator","gutterBottom","ListItem","key","ListItemIcon","message","renderParsingError","Divider","ParsingErrors","Result","content","TableContainer","Paper","Table","table","TableBody","TableRow","TableCell","scope","align","totalDaysInside","totalDaysOutside","totalDaysWindow","totalErrors","TravelsTimeline","timelineRef","createRef","current","fit","timelineOptions","width","stack","showMajorLabels","showCurrentTime","zoomMin","minorLabels","minute","hour","template","element","data","travelCheck","start","end","ReactDOM","createPortal","render","window","timeline","redraw","timeWindowBackground","travels","travelChecksPoints","check","group","options","ref","groups","items","concat","PureComponent","tableIcons","Add","forwardRef","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","blueBackground","background","border","borderRadius","boxShadow","height","padding","alignItems","TravelChecksList","icons","columns","field","filtering","lookup","style","search","exportButton","exportAllData","searchFieldStyle","backgroundColor","rowStyle","rowData","tableData","editable","onRowAdd","newData","Promise","resolve","setTimeout","updateTravelChecks","onRowUpdate","oldData","newTravelChecks","indexOf","onRowDelete","splice","InputFormDialog","Dialog","open","showModal","onClose","hideModalHandler","DialogTitle","DialogContent","container","TextField","autoFocus","multiline","rows","fullWidth","name","newRawInput","handleNewRawInput","Select","processingFunction","handleProcessingFunctionChange","MenuItem","processingFunctionInfo","handleProcessNewRawInput","DialogActions","HowToUse","useState","setOpen","setScroll","handleClickOpen","scrollType","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","InfoDialog","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","focus","scroll","aria-describedby","dividers","DialogContentText","tabIndex","href","rel","target","processingFunctionInfos","App","showModalHandler","newTravelChecksCount","showImportingDataMessage","showClearAllDialog","showDataImportedMessage","showNoDataImportedMessage","rawInput","s","results","parsedOutput","match","push","pop","trim","departureOrArrivalTabular","console","error","isValid","processRawInput","preventDefault","updateTravels","newTravelChecksSorted","reverse","unshift","isAdditionalDateWindowStopCheck","isAdditionalDateWindowStartCheck","checkA","checkB","travelTitle","travelDurationDateWindow","travelDurationNoDateWindow","newTravel","duration","durationDateWindow","travelChecksToTravelsList","computeTravelsWithMessage","travelsComputeResult","travelsParserErrors","addEventListener","handleLeavePage","removeEventListener","confirmationMessage","returnValue","justify","Snackbar","autoHideDuration","Alert","spacing","direction","marginTop","marginBottom","noWrap","computeTravelsMessage","startIcon","computeTravels","document","getElementById"],"mappings":"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","file":"static/js/main.d7f91e60.chunk.js","sourcesContent":["import React from 'react';\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport moment from 'moment';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\n\r\nexport class DateWindow extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { tabValue: 0 }\r\n    this.handleTabChange = this.handleTabChange.bind(this)\r\n    this.selectYear = this.selectYear.bind(this)\r\n  };\r\n  handleTabChange(event, newValue){\r\n    this.setState({ tabValue: newValue })\r\n\r\n    // According to the tab we change to, update the selected window\r\n    switch (newValue) {\r\n      case 0: //Selected tab: custom dates\r\n        this.props.handleWindowStartChange(this.props.dateWindowStart)\r\n        this.props.handleWindowStopChange(this.props.dateWindowStop)\r\n        break;\r\n      case 1: //Selected tab: full year dates\r\n        this.selectYear(moment(this.props.dateWindowStart)._d)\r\n        break;\r\n      case 2: //Selected tab: whole travel interval\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  selectYear(newDate){\r\n    this.props.handleWindowStartChange(moment(new Date(\"01/01/\" + newDate.getFullYear())));\r\n    this.props.handleWindowStopChange(moment(new Date(\"12/31/\" + newDate.getFullYear())));\r\n  }\r\n  render () { \r\n    const classes = this.props;\r\n    return (\r\n    <Grid item xs={12} >\r\n        {/* <MuiPickersUtilsProvider utils={DateFnsUtilsUS} locale='us'> */}\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n              <span role=\"img\" aria-label=\"tooltip-calendar-title\">📅</span> Select counting period\r\n              </Typography>\r\n            </Toolbar>\r\n              <Tabs value={this.state.tabValue} onChange={this.handleTabChange} aria-label=\"Counting period\">\r\n                  <Tab label=\"Custom dates\" {...a11yProps(0)} />\r\n                  <Tab label=\"One Year\" {...a11yProps(1)} />\r\n                  <Tab label=\"Whole travel history\" {...a11yProps(2)} />\r\n              </Tabs>\r\n            </AppBar>\r\n          <Card className={classes.root}>\r\n          <CardContent>\r\n            <TabPanel value={this.state.tabValue} index={0}>\r\n              <Typography className={classes.title} component=\"h1\">\r\n                Count travel days on a specific period\r\n              </Typography>\r\n              <DatePicker\r\n                  variant=\"dialog\"\r\n                  id=\"dateWindowStart\"\r\n                  label=\"From\"\r\n                  format='yyyy-MM-dd'\r\n                  value={this.props.dateWindowStart}\r\n                  onChange={ (newD) => this.props.handleWindowStartChange(moment(newD)) }\r\n              />\r\n              <DatePicker\r\n                      variant=\"dialog\"\r\n                      id=\"dateWindowStop\"\r\n                      label=\"To\"\r\n                      format='yyyy-MM-dd'\r\n                      value={this.props.dateWindowStop}\r\n                      onChange={ (newD) => this.props.handleWindowStopChange(moment(newD)) }\r\n              />\r\n              <Typography component=\"p\" color=\"textSecondary\">\r\n                  The total of days will be counted between the given dates.\r\n              </Typography>\r\n            </TabPanel>\r\n            <TabPanel value={this.state.tabValue} index={1}>\r\n              <Typography className={classes.title} component=\"h1\">\r\n                Count travel days in a full year\r\n              </Typography>\r\n              <DatePicker\r\n                views={[\"year\"]}\r\n                label=\"Year long period\"\r\n                value={this.props.dateWindowStart}\r\n                onChange={ this.selectYear }\r\n                />\r\n              <Typography component=\"p\" color=\"textSecondary\">\r\n                  The total of days will be counted for the given year.\r\n              </Typography>\r\n            </TabPanel>\r\n            <TabPanel value={this.state.tabValue} index={2}>\r\n              <Box>\r\n                <Button\r\n                  onClick={ this.props.fitDateWindow }\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  size=\"medium\">\r\n                      Select whole travel history\r\n                </Button>\r\n              </Box>\r\n              <Typography component=\"p\" color=\"textSecondary\">\r\n                  The total of days will be counted for the whole travel history list.\r\n              </Typography>\r\n            </TabPanel>\r\n          </CardContent>\r\n        </Card>\r\n      </MuiPickersUtilsProvider>\r\n    </Grid>\r\n  )}\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const travelTypes = {\r\n    'Outside': 2,\r\n    'Inside': 1\r\n}\r\n\r\nexport function sortTravelChecks(travelChecks){\r\n    let newList = Array.from(travelChecks)\r\n    newList.sort((a,b) => moment(a.date) - moment(b.date))\r\n    return newList\r\n}\r\n\r\nexport function sumTravelDaysInside(travelsList){\r\n\r\n    const selectedTravels = travelsList.filter((t) => t['group'] === travelTypes[\"Inside\"])\r\n\r\n    if (selectedTravels.length < 1){\r\n        return 0\r\n    }\r\n\r\n     return selectedTravels.map((t) => t['durationDateWindow']).reduce((a,b) => a + b, 0)\r\n}\r\n\r\nexport function processRawInput(rawInput, processingFunction){\r\n    let results = []\r\n    let parsedOutput = []\r\n\r\n    switch(processingFunction){\r\n        case 'i94':\r\n            parsedOutput = rawInput.match(/((\\S+){3})/g);\r\n\r\n            // Remove unwanted keywords if any\r\n            parsedOutput.splice(parsedOutput.indexOf(\"Date\"), 1)\r\n            parsedOutput.splice(parsedOutput.indexOf(\"Type\"), 1)\r\n            parsedOutput.splice(parsedOutput.indexOf(\"Location\"), 1)\r\n\r\n            function departureOrArrivalI94(s){\r\n                return s === 'Departure' ? 'DEP' : (s === 'Arrival' ? 'ARR' : null)\r\n            }\r\n            while (parsedOutput.length > 0) {\r\n                results.push({\r\n                    location: parsedOutput.pop(),\r\n                    type: departureOrArrivalI94(parsedOutput.pop()),\r\n                    date: parsedOutput.pop()\r\n                });\r\n            }\r\n        break;\r\n        case 'tabular':\r\n            parsedOutput = rawInput.match(/[\\S ]+/g).map((a) => a.trim()).filter((a) => a.length > 0);\r\n\r\n            // Remove unwanted keywords if any\r\n            parsedOutput.splice(parsedOutput.indexOf(\"Date\"), 1)\r\n            parsedOutput.splice(parsedOutput.indexOf(\"Type\"), 1)\r\n            parsedOutput.splice(parsedOutput.indexOf(\"Location\"), 1)\r\n\r\n            function departureOrArrivalTabular(s){\r\n                return s === 'Departure' ? 'DEP' : (s === 'Arrival' ? 'ARR' : null)\r\n            }\r\n            while (parsedOutput.length > 0) {\r\n                results.push({\r\n                    type: departureOrArrivalTabular(parsedOutput.pop()),\r\n                    location: parsedOutput.pop(),\r\n                    date: parsedOutput.pop(),\r\n                });\r\n            }\r\n        break;\r\n        default:\r\n            console.error('No processing function found.')\r\n    }\r\n\r\n    // Filter and only keep valid items\r\n    results = results.filter( (tc) => (tc[\"type\"] === 'DEP' || tc[\"type\"] === 'ARR') & moment(tc[\"date\"]).isValid() )\r\n\r\n    // Format the dates\r\n    return results.map((tc) => {\r\n        return {\r\n            date: dateToDateString(moment(tc[\"date\"])),\r\n            location: tc[\"location\"],\r\n            type: tc[\"type\"]\r\n        }\r\n    })\r\n}\r\n\r\nexport function dateStringToDate(dateStr){\r\n    if(dateStr === undefined){\r\n        return undefined\r\n    }\r\n    return new moment(dateStr);\r\n}\r\n\r\nexport function dateToDateString(date){\r\n    return moment(date).format('YYYY-MM-DD')\r\n}\r\n\r\nexport function computeTravelDurationDays(dateStart, dateStop, dateWindowStart, dateWindowStop){\r\n    const dateStartD = dateStringToDate(dateStart)\r\n    const dateStopD = dateStringToDate(dateStop)\r\n    const dateWindowStartD = dateStringToDate(dateWindowStart)\r\n    const dateWindowStopD = dateStringToDate(dateWindowStop)\r\n\r\n    if (dateWindowStart === undefined || dateWindowStop === undefined){\r\n        return Math.abs(dateStopD.diff(dateStartD, 'days')) + 1\r\n    }\r\n    if(dateStartD >= dateWindowStopD || dateStopD <= dateWindowStartD){\r\n        return 0\r\n    }\r\n\r\n    return moment.min(dateWindowStopD, dateStopD).diff(moment.max(dateWindowStartD, dateStartD), 'days') + 1\r\n}\r\n\r\nexport function travelChecksToTravelsList(travelChecks, dateWindowStart, dateWindowStop){\r\n    // travelChecks looks like\r\n    // { location: 'JFK', type: 'DEP' or 'ARR', date: '2020-03-20'\r\n    // Returns something like\r\n    // { id: 1, type: \"point\", title: \"loul\", content: \"Departure from JFK\", start: new Date(2013, 5, 20) }\r\n\r\n    if(travelChecks.length < 1){\r\n        return {travels: [], message: 'No travel checks yet'}\r\n    }\r\n\r\n    // Sort the travel check by date\r\n    let newTravelChecks = sortTravelChecks(travelChecks).reverse()\r\n    let travels = []\r\n\r\n    // Add the time window start and stop as travel checks if they are outside the travels\r\n    if(new Date(dateWindowStop) > new Date(newTravelChecks[0].date)){\r\n\r\n        newTravelChecks.unshift({\r\n            location: newTravelChecks[0].type === 'DEP' ? 'USA' : 'Abroad',\r\n            type: newTravelChecks[0].type === 'DEP' ? 'ARR' : 'DEP',\r\n            date: dateWindowStop,\r\n            isAdditionalDateWindowStopCheck: true\r\n        })\r\n    }\r\n    if(new Date(dateWindowStart) < new Date(newTravelChecks[newTravelChecks.length - 1].date)){\r\n        newTravelChecks.push({\r\n            location: newTravelChecks[newTravelChecks.length - 1].type === 'DEP' ? 'USA' : 'Abroad',\r\n            type: newTravelChecks[newTravelChecks.length - 1].type === 'DEP' ? 'ARR' : 'DEP',\r\n            date: dateWindowStart,\r\n            isAdditionalDateWindowStartCheck: true\r\n        })\r\n    }\r\n\r\n    // Browse the list, element by element\r\n    let newTravel = {}\r\n    let checkA, checkB, travelTitle, travelDurationDateWindow, travelDurationNoDateWindow\r\n    let index = 0\r\n    let errors = []\r\n    while(newTravelChecks.length > 1){\r\n        checkA = newTravelChecks.pop(0)\r\n        checkB = newTravelChecks[newTravelChecks.length - 1]\r\n\r\n        travelDurationDateWindow = computeTravelDurationDays(checkA.date, checkB.date, dateWindowStart, dateWindowStop)\r\n        travelDurationNoDateWindow = computeTravelDurationDays(checkA.date, checkB.date)\r\n\r\n        // Build the travel title\r\n        travelTitle = `From ${checkA['location']} to ${checkB['location']}: ${travelDurationDateWindow} days`\r\n        if (travelDurationNoDateWindow - travelDurationDateWindow > 0){\r\n            travelTitle = `${travelTitle} (${travelDurationNoDateWindow - travelDurationDateWindow} days outside selected period)`\r\n        }\r\n\r\n        // Create a new travel object\r\n        newTravel = {\r\n            id: index,\r\n            type: \"range\",\r\n            title: travelTitle,\r\n            content: `From ${checkA['location']} to ${checkB['location']}: ${travelDurationDateWindow} days`,\r\n            start: checkA.date,\r\n            end: checkB.date,\r\n            duration: travelDurationNoDateWindow,\r\n            durationDateWindow: travelDurationDateWindow\r\n        }\r\n\r\n        if (checkA.type === 'DEP' && checkB.type === 'ARR') {\r\n            index++\r\n            newTravel['group'] = travelTypes['Outside'] // Outside\r\n            travels.push(newTravel)\r\n        }else if(checkA.type === 'ARR' && checkB.type === 'DEP'){\r\n            index++\r\n            newTravel['group'] = travelTypes[\"Inside\"] // Inside\r\n            travels.push(newTravel)\r\n        }else{\r\n            errors.push({\r\n                travelChecks: [checkA, checkB],\r\n                message: `should be consecutive Arrivals and Departures`\r\n            })\r\n        }\r\n    }\r\n\r\n    return {travels: travels, errors: errors}\r\n\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ReactJoin from 'react-join'\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { dateToDateString } from './utils';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    chip: {\r\n      margin: '0px 5px 0px 5px',\r\n    },\r\n    errorMessage:{\r\n      fontSize: '0.8rem',\r\n    }\r\n}));\r\n\r\nexport function renderTravelCheck(tc, classes){\r\n  return(\r\n    <Chip\r\n      icon={ tc.type === 'DEP' ? <ArrowUpward/> : <ArrowDownward />}\r\n      className={ classes ? classes.chip : \"\" }\r\n      label={ `${ dateToDateString(tc.date) } : ${tc.location}` } />\r\n  )\r\n}\r\n\r\nfunction renderParsingError(e, index, classes){\r\n  const separator=\r\n  <Typography className={classes.errorMessage} color=\"textPrimary\" gutterBottom>\r\n    and\r\n  </Typography>\r\n\r\n  return(\r\n    <ListItem key={ index }>\r\n        <ListItemIcon>\r\n          <ErrorIcon />\r\n        </ListItemIcon>\r\n        <ReactJoin separator={separator}>\r\n          { e.travelChecks.map((tc) => renderTravelCheck(tc, classes)) }\r\n        </ReactJoin>\r\n        <Typography className={classes.errorMessage} color=\"textPrimary\" gutterBottom>\r\n        { e.message }\r\n        </Typography>\r\n    </ListItem >\r\n  )\r\n}\r\n\r\nfunction renderParsingErrors(errors, classes){\r\n  return(\r\n    <List variant=\"body2\" >\r\n      {errors.map((m, i) => renderParsingError(m, i, classes))}\r\n      <Divider/>\r\n    </List >\r\n  )\r\n}\r\n\r\nexport function ParsingErrors(props) {\r\n    const classes = useStyles(props);\r\n    if (props.errors === undefined){\r\n      return ''\r\n    }\r\n    if (props.errors.length < 1){\r\n      return ''\r\n    }\r\n    return (\r\n  <Grid item xs={12} >\r\n  <Box>\r\n      <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Errors\r\n            </Typography>\r\n          </Toolbar>\r\n      </AppBar>\r\n      <Card className={classes.root}>\r\n                { renderParsingErrors(props.errors, classes) }\r\n      </Card>\r\n  </Box>\r\n  </Grid>\r\n  )\r\n}\r\n\r\nexport function Result(props) {\r\n  const classes = useStyles(props);\r\n  let content = \r\n  <CardContent>\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableBody>\r\n            <TableRow key=\"inside-count\">\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Total days inside the US:\r\n              </TableCell>\r\n              <TableCell/>\r\n              <TableCell align=\"right\">{props.totalDaysInside}</TableCell>\r\n            </TableRow>\r\n            <TableRow key=\"outside-count\">\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Total days outside the US:\r\n              </TableCell>\r\n              <TableCell/>\r\n              <TableCell align=\"right\">{props.totalDaysOutside}</TableCell>\r\n            </TableRow>\r\n            <TableRow key=\"window-count\">\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Total days in window:\r\n              </TableCell>\r\n              <TableCell/>\r\n              <TableCell align=\"right\">{props.totalDaysWindow}</TableCell>\r\n            </TableRow>\r\n            <TableRow key=\"window-period\">\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                Selected period\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n              From { dateToDateString(props.dateWindowStart) }\r\n              </TableCell>\r\n              <TableCell align=\"left\">\r\n              To { dateToDateString(props.dateWindowStop) }\r\n              </TableCell>\r\n            </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  </CardContent>\r\n\r\n  if (props.errors !== undefined) {\r\n    if (props.errors.length > 0){\r\n      content = \r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            Unable to calculate a result, please fix the { props.totalErrors } errors and try again.\r\n        </Typography>\r\n      </CardContent>\r\n    }\r\n  }\r\n\r\n  return (\r\n  <Grid item xs={12} >\r\n  <Box>\r\n      <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              <span role=\"img\" aria-label=\"tooltip-calc-title\">🧮</span> Results\r\n            </Typography>\r\n          </Toolbar>\r\n      </AppBar>\r\n      <Card className={classes.root}>\r\n        {content}\r\n      </Card>\r\n  </Box>\r\n  </Grid>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Timeline from 'react-visjs-timeline';\r\nimport './timeline.css'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { renderTravelCheck } from './result';\r\n\r\nimport { dateToDateString } from './utils.js'\r\n\r\n\r\nclass TravelsTimeline extends React.PureComponent {\r\n    // http://visjs.org/docs/timeline/#Configuration_Options\r\n    constructor(props) {\r\n        super(props);\r\n        this.timelineRef = React.createRef();  \r\n    }\r\n    componentDidUpdate(){\r\n        // Adapt zoom to fit all travels in view\r\n        if (this.timelineRef.current){\r\n            this.timelineRef.current[\"$el\"].fit()\r\n        }\r\n    }\r\n    render(){\r\n        const classes = this.props;\r\n        const timelineOptions = {\r\n            width: '100%',\r\n            //height: '160px',\r\n            stack: true,\r\n            showMajorLabels: true,\r\n            showCurrentTime: false,\r\n            zoomMin: 1000000,\r\n            type: 'background',\r\n            format: {\r\n                minorLabels: {\r\n                    minute: 'h:mma',\r\n                    hour: 'ha'\r\n                }\r\n            },\r\n            template: function (item, element, data) {\r\n                let content = \"\"\r\n                if(item.travelCheck === undefined){\r\n                    if(item.type === \"background\"){\r\n                        content = \"Selected period\"\r\n                    }else{\r\n                        content = `From ${ dateToDateString(data.start) } to ${ dateToDateString(data.end) }`\r\n                    }\r\n                    return content \r\n                }else{\r\n                    // Should be simply this:\r\n                    // return ReactDOM.render(<div>{renderTravelCheck(item.travelCheck)}</div>, element);\r\n                    // But a bug occurs, workaround from https://github.com/almende/vis/issues/3592#issuecomment-422493078\r\n                    return ReactDOM.createPortal(\r\n                        ReactDOM.render(<div>{renderTravelCheck(item.travelCheck)}</div>, element ),\r\n                        element, () => { window.timeline.redraw()} );\r\n                }\r\n            }\r\n            // locale: 'en_US'\r\n        }\r\n        const timelineGroups = [{id: 2, content: 'Outside the US'}, {id: 1, content: 'Inside the US'}, {id: 3, content: 'Checks'}]\r\n\r\n        // Set up the time window background\r\n        const timeWindowBackground = {\r\n            id: this.props.travels.length + 1,\r\n            type: \"background\",\r\n            // start: new Intl.DateTimeFormat(\"en-US\").format(new Date(this.props.dateWindowStart)),\r\n            start: this.props.dateWindowStart,\r\n            // end: new Intl.DateTimeFormat(\"en-US\").format(new Date(this.props.dateWindowStop))\r\n            end: this.props.dateWindowStop,\r\n            content: ''\r\n        }\r\n\r\n        // Set up points to display the checks\r\n        let travelChecksPoints = this.props.travelChecks.map((check, index) => { return {\r\n            id: this.props.travels.length + index + 2,\r\n            type: \"point\",\r\n            title: `${check['type']} ${check['location']} : ${check['date']}`,\r\n            content: `${check['location']} : ${check['date']}`,\r\n            start: check.date,\r\n            // group: check['type'] === 'DEP' ? 2 : 1\r\n            group: 3,\r\n            travelCheck: check\r\n        }})\r\n\r\n        //  Display the travel window limits\r\n        // travelChecksPoints = travelChecksPoints.concat(\r\n        //     [\r\n        //         new Object({\r\n        //             id: this.props.travels.length + travelChecksPoints.length + 2,\r\n        //             type: \"point\",\r\n        //             // start: new Intl.DateTimeFormat(\"en-US\").format(new Date(this.props.dateWindowStart)),\r\n        //             start: this.props.dateWindowStart,\r\n        //             group: 3\r\n        //         }),\r\n        //         new Object({\r\n        //             id: this.props.travels.length + travelChecksPoints.length + 3,\r\n        //             type: \"point\",\r\n        //             // start: new Intl.DateTimeFormat(\"en-US\").format(new Date(this.props.dateWindowStart)),\r\n        //             start: this.props.dateWindowStop,\r\n        //             group: 3\r\n        //         })\r\n        //     ]        \r\n        // )\r\n        return (\r\n        <Grid item xs={12}>\r\n            <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                <span role=\"img\" aria-label=\"tooltip-graph-title\">📊</span> Timeline\r\n              </Typography>\r\n            </Toolbar>\r\n            </AppBar>\r\n            <Timeline options={timelineOptions}\r\n                ref={this.timelineRef}\r\n                groups={timelineGroups}\r\n                items={this.props.travels.concat(travelChecksPoints).concat(timeWindowBackground)} />\r\n        </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport { TravelsTimeline };","import React from 'react';\r\nimport { forwardRef } from 'react';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\nexport { tableIcons };","import React from 'react';\r\nimport { tableIcons } from './icons.js'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MaterialTable from 'material-table';\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport './travel_checks.css'\r\nimport { dateToDateString } from './utils.js';\r\n\r\nimport './travel_checks.css'\r\n\r\nconst useStyles = makeStyles({\r\n    blueBackground: {\r\n        background: 'linear-gradient(45deg, #3f51b5 30%, #3f51b5 90%)',\r\n        border: 0,\r\n        borderRadius: 0,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        alignItems: 'center'\r\n    }\r\n  });\r\n\r\nexport function TravelChecksList(props) {\r\n        const classes = useStyles(props);\r\n        return (\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            {/* <Toolbar className={classes.blueBackground}>\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Travel checks list\r\n                </Typography>\r\n            </Toolbar> */}\r\n            <MaterialTable\r\n                icons={tableIcons}\r\n                columns={[\r\n                        { title: 'Date', field: 'date', type: 'date',  filtering: false, render: (a) => dateToDateString(a.date) },\r\n                        { title: 'Location', field: 'location', filtering: false },\r\n                        { title: 'Type', field: 'type', lookup:{'DEP': 'Departure', 'ARR': 'Arrival'} }\r\n                    ]}\r\n                data={props.travelChecks}\r\n                title=\"🖋️ Travel checks list\"\r\n                style = {{classes}}\r\n                options={{\r\n                    search: false,\r\n                    exportButton: true,\r\n                    exportAllData: true,\r\n                    searchFieldStyle: {\r\n                      backgroundColor: '#01579b',\r\n                      color: '#FFF'\r\n                    },\r\n                    rowStyle: rowData => ( { backgroundColor: (rowData.tableData.id % 2) ? '#EEE' : '#FFF' } )\r\n                }}\r\n                // localization={{ dateTimePickerLocalization: 'en_US' }}\r\n                // options={{searchFieldAlignment: 'left', filtering: true}}\r\n                editable={{\r\n                    onRowAdd: newData =>\r\n                        new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                                props.updateTravelChecks(props.travelChecks.concat(newData));\r\n                            resolve();\r\n                        }, 1000);\r\n                    }),\r\n                    onRowUpdate: (newData, oldData) =>\r\n                        new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            {\r\n                                const newTravelChecks = props.travelChecks.concat();\r\n                                const index = newTravelChecks.indexOf(oldData);\r\n                                newTravelChecks[index] = newData;              \r\n                                props.updateTravelChecks(newTravelChecks);\r\n                            }\r\n                            resolve();\r\n                        }, 1000);\r\n                    }),\r\n                onRowDelete: oldData =>\r\n                    new Promise((resolve) => {\r\n                        setTimeout(() => {\r\n                            {\r\n                                let newTravelChecks = props.travelChecks.concat();\r\n                                const index = newTravelChecks.indexOf(oldData);\r\n                                newTravelChecks.splice(index, 1);\r\n                                props.updateTravelChecks(newTravelChecks);\r\n                            }\r\n                            resolve();\r\n                        }, 1000);\r\n                    })\r\n            }}/>\r\n            </Card>\r\n        </Grid>\r\n    )\r\n}","\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nexport class InputFormDialog extends React.PureComponent {\r\n    render() {\r\n        return (\r\n            <Dialog open={this.props.showModal} onClose={this.props.hideModalHandler} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Import raw data</DialogTitle>\r\n            <DialogContent>\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    <Typography component=\"p\" color=\"textSecondary\">\r\n                        Copy and paste your travel data in the input field, select the corresponding import format and press Import.\r\n                        <br />\r\n                        Nothing about you or any travel history is collected and sent anywhere: privacy is guaranteed.\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Paste input data here:\"\r\n                        multiline\r\n                        rows={10}\r\n                        fullWidth\r\n                        name='rawInput'\r\n                        size=\"small\"\r\n                        value={this.props.newRawInput}\r\n                        onChange={this.props.handleNewRawInput} />\r\n                </Grid>\r\n                <Grid item container xs={4}>\r\n                    <Grid item xs={12}>\r\n                        <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n                            Select the import format:\r\n                        </Typography>\r\n                        <Select value={this.props.processingFunction} onChange={this.props.handleProcessingFunctionChange}>\r\n                            <MenuItem value='i94'>I94 website format</MenuItem>\r\n                            <MenuItem value='tabular'>Tabular copy paste format</MenuItem>\r\n                        </Select>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Typography component=\"p\">\r\n                        {this.props.processingFunctionInfo}\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button onClick={ (e) => { this.props.hideModalHandler(); this.props.handleProcessNewRawInput(e); } }\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\">Import</Button>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment'\r\n\r\nimport { renderTravelCheck } from './result.js'\r\n\r\nexport function HowToUse(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [, setScroll] = React.useState('paper');\r\n  \r\n    const handleClickOpen = (scrollType) => () => {\r\n      setOpen(true);\r\n      setScroll(scrollType);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    return (\r\n    <Grid item xs={12}>\r\n        <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            >\r\n            <Typography variant=\"h6\" color=\"primary\" >How to use ?</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n            <Typography  component=\"p\" color=\"textPrimary\">                \r\n                <span role=\"img\" aria-label=\"tooltip-pen\">🖋️</span> Import some I94 travel history data, or manually create some entries below.<br />\r\n                <span role=\"img\" aria-label=\"tooltip-calendar\">📅</span> Select a counting period<br />\r\n                <span role=\"img\" aria-label=\"tooltip-graph\">📊</span> Check your travel history using the timeline <br />\r\n                <span role=\"img\" aria-label=\"tooltip-calc\">🧮</span> Get the count of days from the results tab<br />\r\n                <br />\r\n                <Button size=\"small\"  color=\"primary\" variant=\"contained\" onClick={handleClickOpen('paper')}>\r\n                    More information\r\n                </Button>\r\n            </Typography>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n        <InfoDialog handleClickOpen={handleClickOpen} handleClose={handleClose} open={open} />\r\n\r\n    </Grid>\r\n)}\r\n\r\n\r\n\r\nexport function InfoDialog(props) {\r\n    const descriptionElementRef = React.useRef(null);\r\n    React.useEffect(() => {\r\n      if (props.open) {\r\n        const { current: descriptionElement } = descriptionElementRef;\r\n        if (descriptionElement !== null) {\r\n          descriptionElement.focus();\r\n        }\r\n      }\r\n    }, [props.open]);\r\n  \r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={props.open}\r\n          onClose={props.handleClose}\r\n          scroll={props.scroll}\r\n          aria-labelledby=\"scroll-dialog-title\"\r\n          aria-describedby=\"scroll-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"scroll-dialog-title\">Additional Information</DialogTitle>\r\n          <DialogContent dividers={props.scroll === 'paper'}>\r\n            <DialogContentText\r\n              id=\"scroll-dialog-description\"\r\n              ref={descriptionElementRef}\r\n              tabIndex={-1}\r\n            >\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                    What is this?\r\n                </Typography>\r\n                <Typography variant=\"p\">\r\n                    This tool has been created to help US Non Residents to fill their paperwork:\r\n                    the US administration sometimes require a calculation of the total amount of days spent on US territory.\r\n                    This can be long and difficult to do, especially if you travel a lot.\r\n                    <br />\r\n                    <br />\r\n                    With this tool, you can directly copy and paste your travel history in the \"Import data\" tool to get a visualization\r\n                    of your travel history, as well as the calculations needed for your paperwork on a selected time period.\r\n                    <br />\r\n                    <br />\r\n                </Typography>\r\n                <Typography variant=\"h6\" color=\"textPrimary\">\r\n                    What about my privacy?\r\n                </Typography>\r\n                <Typography variant=\"p\">\r\n                    Just like a calculator, this tool is a standalone app: it doesn't send any information you fill in on the internet.\r\n                    <br />\r\n                    <br />\r\n                </Typography>\r\n              <Typography variant=\"h6\" color=\"textPrimary\">\r\n                How are days counted?\r\n              </Typography>\r\n                <Typography variant=\"p\">\r\n                In most cases the US immigration counts the travel days as days <b>inside the US</b>.\r\n                <br />\r\n                <br />\r\n                <b>Example:</b>\r\n                <br />\r\n                Let's say you want to count your travel days in <b>2017</b>. The only trip you had\r\n                was in Mexico on April 1st 2017, and you came back on April 5th 2017. <br /> <br />\r\n                This shows up in your I94 with the following travel checks: <br /> {\r\n                  renderTravelCheck({date: moment('2017-04-01'),\r\n                  location: 'MIA', type: 'DEP'})\r\n                }(Departure) and {\r\n                  renderTravelCheck({date: moment('2017-04-05'),\r\n                  location: 'MIA', type: 'ARR'})\r\n                } (Arrival)\r\n                <br /><br />\r\n                The total count of days outside the US in 2017 is 3 days: <b>you were traveling</b> for 2 days <b>and outside</b> the US for 3 days. \r\n                <br />\r\n                The total count of days inside the US in 2017 is 362 days: <b>you were traveling</b> for 2 days <b>and inside</b> the US during 360 days.\r\n                <br />\r\n                You may check your result with 3 + 362 = 365, there are 365 days in 2017.\r\n                <br />\r\n                <br />\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textPrimary\">\r\n                Something does not work!\r\n              </Typography>\r\n                <Typography variant=\"p\">\r\n                    You are more than welcome to report any issue on the <a href=\"https://github.com/mxm-tr/travel_history_parser\" rel=\"noopener noreferrer\" target=\"_blank\">github account of the app</a>.\r\n                <br />\r\n                </Typography>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={props.handleClose} color=\"primary\">\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport moment from 'moment'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\n\r\nimport './index.css';\r\n\r\nimport { DateWindow } from './date_window.js'\r\nimport { TravelsTimeline } from './timeline.js'\r\nimport { TravelChecksList } from './travel_checks.js'\r\nimport { InputFormDialog } from './input_form_dialog.js'\r\nimport { sortTravelChecks, processRawInput, computeTravelDurationDays, sumTravelDaysInside, travelChecksToTravelsList } from './utils.js';\r\nimport { Result, ParsingErrors } from './result.js'\r\nimport { HowToUse } from './tooltips.js';\r\n\r\nconst processingFunctionInfos={\r\n    \"i94\": <span> Copy and paste data from the table on the\r\n            <a href=\"https://i94.cbp.dhs.gov/I94/#/history-search\" target=\"_blank\" rel=\"noopener noreferrer\"> official i94 website </a>\r\n        </span>,\r\n    \"tabular\": <span> Copy and paste data from a CSV table you have exported using this tool </span>\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showModal : false,\r\n            newTravelChecksCount: 0,\r\n            showImportingDataMessage: false,\r\n            showClearAllDialog: false,\r\n            showDataImportedMessage: false,\r\n            showNoDataImportedMessage: false,\r\n            travelChecks: [],\r\n            // travelChecks: [{\r\n            //     \"location\": \"RRA\",\r\n            //     \"type\": \"ARR\",\r\n            //     \"date\": \"2017-03-30\",\r\n            // },\r\n            // {\r\n            //     \"location\": \"BWI\",\r\n            //     \"type\": \"DEP\",\r\n            //     \"date\": \"2017-03-31\",\r\n            // },\r\n            // {\r\n            //     \"location\": \"DLA\",\r\n            //     \"type\": \"ARR\",\r\n            //     \"date\": \"2017-05-30\",\r\n            // },\r\n            // {\r\n            //     \"location\": \"DUL\",\r\n            //     \"type\": \"DEP\",\r\n            //     \"date\": \"2017-06-30\",\r\n            // }],\r\n            newRawInput: 'poop',\r\n            processingFunction: 'i94',\r\n            dateWindowStart: new moment(),\r\n            dateWindowStop: new moment(),\r\n        };\r\n        this.handleNewRawInput = this.handleNewRawInput.bind(this);\r\n        this.handleProcessingFunctionChange = this.handleProcessingFunctionChange.bind(this);\r\n        this.handleProcessNewRawInput = this.handleProcessNewRawInput.bind(this);\r\n        this.updateTravelChecks = this.updateTravelChecks.bind(this);\r\n        this.handleWindowStartChange = this.handleWindowStartChange.bind(this);\r\n        this.handleWindowStopChange = this.handleWindowStopChange.bind(this);\r\n        this.fitDateWindow = this.fitDateWindow.bind(this);\r\n    }\r\n\r\n    handleProcessingFunctionChange(event) {\r\n        this.setState({processingFunction: event.target.value});\r\n    }\r\n\r\n    handleNewRawInput(event) {\r\n        this.setState({newRawInput: event.target.value});\r\n    }\r\n\r\n    handleProcessNewRawInput(event){\r\n        this.setState({showImportingDataMessage:true})\r\n        const newTravelChecks = processRawInput(this.state.newRawInput, this.state.processingFunction)\r\n        if (newTravelChecks.length > 0){\r\n            this.setState({\r\n                newTravelChecksCount: newTravelChecks.length,\r\n                showDataImportedMessage: true\r\n            });\r\n        }else{\r\n            this.setState({showNoDataImportedMessage:true});\r\n        }\r\n        this.updateTravelChecks(this.state.travelChecks.concat(newTravelChecks))\r\n        event.preventDefault();\r\n    }\r\n\r\n    fitDateWindow(){\r\n        this.setState({\r\n            dateWindowStart: this.state.travelChecks[0].date,\r\n            dateWindowStop: this.state.travelChecks[this.state.travelChecks.length - 1].date\r\n        })\r\n    }\r\n\r\n    handleWindowStartChange(newD){\r\n        this.setState({dateWindowStart: newD === null ? this.state.travelChecks[0].date : newD })\r\n        this.updateTravels()\r\n    }\r\n    handleWindowStopChange(newD){\r\n        this.setState({dateWindowStop: newD === null ? this.state.travelChecks[this.state.travelChecks.length - 1].date : newD })\r\n        this.updateTravels()\r\n    }\r\n\r\n    updateTravelChecks(newTravelChecks){\r\n        // Updates the travel checks list, and the date window pickers' defaults values\r\n        if (newTravelChecks.length < 1){\r\n            return\r\n        }\r\n        \r\n        const newTravelChecksSorted = sortTravelChecks(newTravelChecks)\r\n        this.setState(\r\n                {\r\n                    dateWindowStart: newTravelChecksSorted[0].date,\r\n                    dateWindowStop: newTravelChecksSorted[newTravelChecksSorted.length - 1].date,\r\n                    travelChecks: newTravelChecksSorted\r\n                }\r\n            )\r\n    }\r\n    computeTravelsWithMessage(){\r\n       return travelChecksToTravelsList(this.state.travelChecks, this.state.dateWindowStart, this.state.dateWindowStop)\r\n    }\r\n    computeTravels(){\r\n        return this.computeTravelsWithMessage()['travels']\r\n    }\r\n    computeTravelsMessage(){\r\n        return this.computeTravelsWithMessage()['errors']\r\n    }\r\n    updateTravels(){\r\n        const travelsComputeResult = this.computeTravelsWithMessage()\r\n        this.setState(\r\n            {\r\n                travels: travelsComputeResult['travels'],\r\n                travelsParserErrors: travelsComputeResult['errors']\r\n            }\r\n        )\r\n    }\r\n\r\n    showModalHandler = () =>{\r\n        this.setState({showModal:true});\r\n    }\r\n    hideModalHandler = () =>{\r\n        this.setState({showModal:false});\r\n    }\r\n    componentDidMount() {\r\n        window.addEventListener('beforeunload', this.handleLeavePage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('beforeunload', this.handleLeavePage);\r\n    }\r\n    handleLeavePage(e) {\r\n        const confirmationMessage = 'Do you want to leave this page? You will lose all current data.';\r\n        e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+\r\n        return confirmationMessage;              // Gecko, WebKit, Chrome <34\r\n    }\r\n    render() {\r\n      return (\r\n        <MuiThemeProvider>\r\n        <Grid container justify=\"center\" alignItems=\"center\" >\r\n            <Snackbar open={this.state.showImportingDataMessage} onClose={ () => this.setState({showImportingDataMessage:false}) } autoHideDuration={2000} >\r\n                <Alert color='info'>Importing Data</Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.showDataImportedMessage} onClose={ () => this.setState({showDataImportedMessage:false}) } autoHideDuration={2000} >\r\n                <Alert color='success'>{this.state.newTravelChecksCount} new lines imported !</Alert>\r\n            </Snackbar>\r\n            <Snackbar open={this.state.showNoDataImportedMessage} onClose={ () => this.setState({showNoDataImportedMessage:false}) } autoHideDuration={5000} >\r\n                <Alert color='error'>No data imported, check your input and make sure you selected the right processing function.</Alert>\r\n            </Snackbar>\r\n\r\n            <Dialog onClose={() => this.setState({showClearAllDialog: false})} aria-labelledby=\"simple-dialog-title\" open={this.state.showClearAllDialog}>\r\n            <DialogTitle id=\"simple-dialog-title\">Clear all data</DialogTitle>\r\n            <DialogActions>\r\n            <Button onClick={() => this.setState({travelChecks: [], travels: [], showClearAllDialog: false})} color=\"primary\">\r\n                Delete all\r\n            </Button>\r\n            <Button onClick={() => this.setState({showClearAllDialog: false})} color=\"primary\" autoFocus>\r\n                Cancel\r\n            </Button>\r\n            </DialogActions>\r\n            </Dialog>\r\n            <InputFormDialog\r\n                showModal={this.state.showModal}\r\n                hideModalHandler={this.hideModalHandler}\r\n                handleNewRawInput={this.handleNewRawInput}\r\n                handleProcessNewRawInput={this.handleProcessNewRawInput}\r\n                processingFunction={this.state.processingFunction}\r\n                processingFunctionInfo={processingFunctionInfos[this.state.processingFunction]}\r\n                handleProcessingFunctionChange={this.handleProcessingFunctionChange} />\r\n            \r\n            <Grid container item xs={11} spacing={3} direction=\"row\" alignItems=\"center\" justify=\"center\" style={{marginTop: 10, marginBottom: 10}}>\r\n            \r\n            <Grid container item spacing={3} justify=\"center\" alignItems=\"flex-start\">\r\n                <Grid container item xs={7} direction=\"column\" spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography  component=\"h4\" variant=\"h5\" color=\"inherit\" noWrap>\r\n                            <span role=\"img\" aria-label=\"airplane\">✈️</span> US Travel History Calculator\r\n                        </Typography>\r\n                    </Grid>\r\n                    <HowToUse />\r\n                    <TravelChecksList travelChecks={ this.state.travelChecks } updateTravelChecks={this.updateTravelChecks} />\r\n                    <ParsingErrors errors={this.computeTravelsMessage()} />\r\n                </Grid>\r\n                <Grid container item xs={5} direction=\"column\" spacing={2}>\r\n                    <Grid item container xs={12} justify=\"space-between\" alignItems=\"center\">\r\n                        <Grid item>\r\n                            <Button\r\n                                    onClick={this.showModalHandler}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    size=\"large\"\r\n                                    startIcon={<AddBox />}>\r\n                                        Import Data\r\n                                </Button>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Button \r\n                                onClick={() => this.setState({showClearAllDialog: true})}\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                size=\"large\"\r\n                                startIcon={<DeleteOutline />}>\r\n                                    Clear All Data\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <DateWindow\r\n                        dateWindowStart={this.state.dateWindowStart}\r\n                        dateWindowStop={this.state.dateWindowStop}\r\n                        handleWindowStartChange={ this.handleWindowStartChange }\r\n                        handleWindowStopChange={ this.handleWindowStopChange } \r\n                        fitDateWindow = { this.fitDateWindow }/>\r\n                    <Result\r\n                        dateWindowStart={this.state.dateWindowStart}\r\n                        dateWindowStop={this.state.dateWindowStop}\r\n                        totalDaysInside={sumTravelDaysInside(this.computeTravels())}\r\n                        totalDaysOutside={computeTravelDurationDays(this.state.dateWindowStart, this.state.dateWindowStop) - sumTravelDaysInside(this.computeTravels())}\r\n                        totalDaysWindow={computeTravelDurationDays(this.state.dateWindowStart, this.state.dateWindowStop)}\r\n                        errors={ this.computeTravelsMessage() } />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TravelsTimeline travels={this.computeTravels()}\r\n                        travelChecks={this.state.travelChecks}\r\n                        dateWindowStart={this.state.dateWindowStart}\r\n                        dateWindowStop={this.state.dateWindowStop}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n    </MuiThemeProvider>\r\n    );\r\n    }\r\n  }\r\n  \r\n  \r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <div>\r\n        <App name=\"Travel checks list\"/>\r\n    </div>,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}